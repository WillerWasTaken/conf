" ########## PLUGINS ##########
" Install vimplug Automatically
" https://github.com/junegunn/vim-plug/wiki/tips#automatic-installation
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

" gcc to comment
Plug 'https://github.com/tpope/vim-commentary'
" Status bar
Plug 'https://github.com/bling/vim-airline'
" Colorscheme
Plug 'https://github.com/nanotech/jellybeans.vim'
" Git
Plug 'https://github.com/tpope/vim-fugitive'
" File explorer
Plug 'https://github.com/scrooloose/nerdtree'
" Pane/split navigation between vim and tmux (cf ~/.tmux.conf)
" https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
Plug 'https://github.com/christoomey/vim-tmux-navigator'
" Git side markers
Plug 'https://github.com/airblade/vim-gitgutter'
" Find file
Plug 'https://github.com/junegunn/fzf'
" Search string
Plug 'https://github.com/mileszs/ack.vim'
" Surround
Plug 'https://github.com/tpope/vim-surround'
" Go language
Plug 'https://github.com/fatih/vim-go'
" Navigate between definitions
Plug 'https://github.com/majutsushi/tagbar'
" Terraform syntax highlight
Plug 'https://github.com/hashivim/vim-terraform'
" Livedown for markdown preview on port 1337
Plug 'https://github.com/shime/vim-livedown'
" Syntax highlight for ansible
Plug 'https://github.com/pearofducks/ansible-vim'
" Replace s usage
Plug 'https://github.com/justinmk/vim-sneak'
" Indentation marks
Plug 'https://github.com/Yggdroot/indentLine'
" Yaml folds
Plug 'https://github.com/pedrohdz/vim-yaml-folds'
" Live preview on replace
Plug 'https://github.com/markonm/traces.vim'

" Initialize plugin system
call plug#end()

" Syntax highlighting
syntax on
colorscheme jellybeans

" ########## GENERAL ##########
" Smart search
set ignorecase
set smartcase
set incsearch
set hlsearch

" Show command as it is being typed
set showcmd

" Numbers on the side
set number
set relativenumber

" Highlight the current line
set cursorline

" Move up and down 'visually' line by line
nnoremap j gj
nnoremap k gk

" jk to escape in insert
inoremap jk <Esc>
" Copy message
inoremap <C-v> <C-o>"+p


" More natural split order
set splitbelow
set splitright

" keep 5 lines at least between the cursor and the end of the buffer
set scrolloff=5

" Default indentation when no filetype is detected
setlocal tabstop=4
setlocal softtabstop=4
setlocal shiftwidth=4
setlocal expandtab

" Display column for the 120th character
set colorcolumn=120

" Show trailing whitespaces as dashes
set list
set listchars=tab:▸\ ,trail:·,extends:>,precedes:<,nbsp:+

" Unlimited undo
set undofile
set undolevels=1000
set undoreload=10000
set backupdir=~/.vim/backup//
set directory=~/.vim/swap//
set undodir=~/.vim/undo//

" Yaml handling
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab foldmethod=indent
let g:indentLine_char = '⦙'

" ########## GENERAL SHORTCUTS ##########
" Leader on space
let mapleader = " "

" Vim configuration manipulation
nnoremap <leader>ce :tabnew<CR>:lcd ~/conf<CR>:e ~/conf/dotfiles/vimrc<CR>
nnoremap <leader>cs :source ~/.vimrc<CR>

" Open buffer
nnoremap <leader>b :buffer 

" Diff
nnoremap <leader>dt :windo diffthis<CR>
nnoremap <leader>do :windo diffoff<CR>

" Deactivate search highlight
nnoremap <leader>a :nohlsearch<CR>

" Search under visual
vnoremap / y/\V<C-r>=escape(@",'/\')<CR><CR>
vnoremap ? y?\V<C-r>=escape(@",'/\')<CR><CR>

" Move between split
nnoremap <leader>h <C-W>h
nnoremap <leader>j <C-W>j
nnoremap <leader>k <C-W>k
nnoremap <leader>l <C-W>l

" Save
nnoremap <leader>w :w<CR>

" Quit
nnoremap <leader>q :q<CR>

" ########## PLUGINS CONFIGURATION ##########
" ### Ack ###
nnoremap <leader>s :Ack 
" Use ag executable
if executable('rg')
  let g:ackprg = 'rg --vimgrep'
endif

" ### NERDTREE ###
" Activate Nerdtree
nnoremap <leader>o :NERDTreeFind<cr>
" New tab with nerdtree
nnoremap <leader>n :tabnew<CR>:NERDTree<CR>

" ### FZF ###
nnoremap <leader>f :FZF<CR>

" ### GIT (FUGITIVE) ###
nnoremap <leader>g :G<CR>

" ### Sneak ###
let g:sneak#label = 1

" ### AIRLINE ###
" Properly display font symbols https://github.com/vim-airline/vim-airline/wiki/FAQ
let g:airline_powerline_fonts = 1

" ### VIM-ANSIBLE ###
" Reset indentation after two newlines
let g:ansible_unindent_after_newline = 1

" ### VIM-TERRAFORM ###
" Format on save
let g:terraform_align = 1
let g:terraform_fmt_on_save = 1
let g:terraform_binary_path = '/home/willer/.asdf/shims/terraform'
autocmd BufWritePre *.hcl call terraform#fmt()

" ########## LANGUAGE ##########
" ### GO ###
" Launch go test
autocmd FileType go nnoremap <localleader>t <Plug>(go-test)
" Alternate source/test
autocmd FileType go nnoremap <localleader>z <Plug>(go-alternate-vertical)
