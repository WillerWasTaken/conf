" Install vam
" git clone https://github.com/MarcWeber/vim-addon-manager ~/.vim/vad

" ########## PLUGINS ##########
set rtp+=~/.vim/vad

let addons = []
" gcc to comment
let addons += ['github:tpope/vim-commentary']
" Status bar
let addons += ['github:bling/vim-airline']
" Colorscheme
let addons += ['github:nanotech/jellybeans.vim']
" Git
let addons += ['github:tpope/vim-fugitive']
" File explorer
let addons += ['github:scrooloose/nerdtree']
" Pane/split navigation between vim and tmux (cf ~/.tmux.conf)
" https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
let addons += ['github:christoomey/vim-tmux-navigator']
" Git side markers
let addons += ['github:airblade/vim-gitgutter']
" Find file
let addons += ['github:junegunn/fzf']
" Search string
let addons += ['github:mileszs/ack.vim']
" Surround
let addons += ['github:tpope/vim-surround']
" Go language
let addons += ['github:fatih/vim-go']
" Navigate between definitions
let addons += ['github:majutsushi/tagbar']

" Auto update the addons
call vam#ActivateAddons(addons, {'auto_install' : 1})

" Syntax highlighting
syntax on
colorscheme jellybeans

" ########## GENERAL ##########
" Smart search
set ignorecase
set smartcase
set incsearch
set hlsearch

" Show command as it is being typed
set showcmd

" Numbers on the side
set number
set relativenumber

" Highlight the current line
set cursorline

" Move up and down 'visually' line by line
nnoremap j gj
nnoremap k gk

" jk to escape in insert
inoremap jk <Esc>

" More natural split order
set splitbelow
set splitright

" Default indentation when no filetype is detected
setlocal tabstop=4
setlocal softtabstop=4
setlocal shiftwidth=4
setlocal expandtab

" Show trailing whitespaces as dashes
set list
set listchars=tab:▸\ ,trail:·,extends:>,precedes:<,nbsp:+

" Unlimited undo
set undofile
set undolevels=1000
set undoreload=10000
set backupdir=~/.vim/backup//
set directory=~/.vim/swap//
set undodir=~/.vim/undo//

" ########## GENERAL SHORTCUTS ##########
" Leader on space
let mapleader = " "

" Vim configuration manipulation
nnoremap <leader>ce :tabnew<CR>:e ~/.vimrc<CR>
nnoremap <leader>cs :source ~/.vimrc<CR>

" Open buffer
nnoremap <leader>b :buffer 

" Diff
nnoremap <leader>dt :windo diffthis<CR>
nnoremap <leader>do :windo diffoff<CR>

" Deactivate search highlight
nnoremap <leader>a :nohlsearch<CR>

" Search under visual
vnoremap / y/\V<C-r>=escape(@",'/\')<CR><CR>
vnoremap ? y?\V<C-r>=escape(@",'/\')<CR><CR>

" Move between split
nnoremap <leader>h <C-W>h
nnoremap <leader>j <C-W>j
nnoremap <leader>k <C-W>k
nnoremap <leader>l <C-W>l

" Save
nnoremap <leader>w :w<CR>

" Quit
nnoremap <leader>q :q<CR>

" ########## PLUGINS CONFIGURATION ##########
" ### Ack ###
nnoremap <leader>s :Ack 
" Use ag executable
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

" ### NERDTREE ###
" Activate Nerdtree
nnoremap <leader>o :NERDTreeFind<cr>
" New tab with nerdtree
nnoremap <leader>n :tabnew<CR>:NERDTree<CR>

" ### FZF ###
nnoremap <leader>f :FZF<CR>

" ### GIT (FUGITIVE) ###
nnoremap <leader>g :G<CR>

" ### AIRLINE ###
" Properly display font symbols https://github.com/vim-airline/vim-airline/wiki/FAQ
let g:airline_powerline_fonts = 1

" ########## LANGUAGE ##########
" ### GO ###
" Launch go test
autocmd FileType go nnoremap <localleader>t <Plug>(go-test)
" Alternate source/test
autocmd FileType go nnoremap <localleader>z <Plug>(go-alternate-vertical)
